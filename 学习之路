《Java编程思想》

《大话设计模式》

《重构 改善既有代码的设计》，《effective java》

能写出一手优雅的代码。

《深入理解Java虚拟机》

《Java并发编程实战》

	框架 类库
	
	深入了解Java底层和Java类库（比如并发那本书就是Java并发包java.concurrent的内容）
	
	JDK中的类的源码
	
	框架的源码   必须对设计模式非常了解
	
	根据别人优秀的源码，去造一个任何你能够想象出来的轮子。
	
	
	三年后：
	
	或多或少接触过一些其它的技术，比如大数据、分布式缓存、分布式消息服务、分布式计算、软负载均衡等等。
	
	研究一门新技术时，切忌朝三暮四。
	
	想要让一门技术成为你的优势 那么对这门技术的了解一定要强过绝大多数人
	
	
	比如算法、计算机系统原理、编译原理这些
	
	《深入理解计算机系统》，《tcp/ip详解 卷一、二、三》，《数据结构与算法》。
	
	《深入理解计算机系统》比较适合一直从事Java Web开发和APP后端
	
	《tcp/ip详解 卷一、二、三》比较适合做网络编程的人群，比如你使用netty去开发的话，那么就要对TCP/IP有更深入的了解。
	
	《数据结构与算法》这本书，则比较适合做计算研究工作的人，比如刚才提到的分布式计算。 
	
	
		学习完了以上的知识以后：
		在这一年里，一定要规划好自己的领域，建立好自己的优势，制造出差异性。如果你对自己的领域不够清晰的话，
		随着你工作的时间日益增多，你接触的技术会越来越多，这个时候，你很容易被淹死在技术的海洋里，看似接触的
		技术越来越多，会用的也越来越多，但你毫无优势。 
		
		有的同学可能会问，“我，我也不知道我的领域是什么啊？怎么办呢？” 
		对于这种人，我只想说，“卧槽，这还问我？要不干脆我替你学习得了，好不好？”
		
		
		选择一门技术，成为专家
		
		
		
		技术遇到了瓶颈，在自己的领域有了一定的见解。这个时候需要提高自己的影响力了，可以去一些知名的公司提高自己的背景，
		发表一些文章来影响更多的人
		
		也可以在github上打造属于自己的开源项目，打造自己的产品，对别人有价值的轮子。如支付宝，qq ,百度，微信等
		
		分布式计算有一定的影响力，会具有优势。
		
		
		此时大概已经有4年的时间了。
		
		
		写了以上文字的我，从2015年6月开始实习，现在已经是2017年8月25了
		
		
		零零总总的学习和了解了一些java web开发能力。
		
				技术人员乐于被领导；但他们不喜欢被管理，不喜欢像牛一样被驱赶或指挥。管理者强迫人们服从他们的命令，而领导者则会带领他们一起工作。
管理是客观的，没有个人感情因素，它假定被管理者没有思想和感受，被告知要做什么和该如何做。领导是引领、引导，它激励人们达成目标。
领导力是带有强烈个人感情色彩的，它不是你能命令的，也不是你能测量评估和测试的。
		
		职业规划：
		
		程序员->架构师->Team Leader（Project Manager）->技术总监 
		
		2017年6月24，我现在 25  也就是说自己的发展时间只有5年
			
		成家：30结婚 要孩子  礼金十几万左右 + 开销8万  大概25万
		
		一年需要存5万元
		
		7000-2000（吃住行）-（500）请客-200（手机）-零食（200） 剩 4000 需要涨工资了 至少 3k-4k
		
		12*4K = 48k 
		
		
		

一个普通的.NET程序员，开始可能限制于  
	ASP.net的页面开发，
但一旦他有了发展之心，他自然会对ASP.Net MVC、Silverlight、WinForm、WPF这些
  UI的开发手法感到兴趣，学习不需要多少时间，他可能就会
  
  认识这些UI开发只不过是一些工具，其实在开发原理上没什么区别。
  
  接着他就会向深一层的
  通讯模式进行了解，认识TCP/IP、Web Service、WCF、Remoting这些常用到的通讯方式，
  这时候他可能已经感觉到自己对开发技术有了进一步的了解。
  
  进而向工作流、设计模式、面向对象设计、领域驱动设计、面向服务开发等高层次进发，最后成为技术的领导者。
  
  
  
